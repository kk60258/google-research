# SSDLite with MobileDet-DSP feature extractor.
# Reference: Xiong & Liu et al., https://arxiv.org/abs/2004.14525
# Trained on COCO, initialized from scratch.
#
# 2.82B MulAdds, 7.16M Parameters. Latency is 12.3ms on Pixel 4 DSP.
# Achieves 28.9 mAP on COCO14 minival dataset.
# Achieves 28.4 mAP on COCO17 val dataset.
#
# This config is TPU compatible.

model {
  ssd {
    inplace_batchnorm_update: true
    freeze_batchnorm: false
    num_classes: 1
    box_coder {
      faster_rcnn_box_coder {
        y_scale: 10.0
        x_scale: 10.0
        height_scale: 5.0
        width_scale: 5.0
      }
    }
    matcher {
      argmax_matcher {
        matched_threshold: 0.5
        unmatched_threshold: 0.5
        ignore_thresholds: false
        negatives_lower_than_unmatched: true
        force_match_for_each_row: true
        use_matmul_gather: true
      }
    }
    similarity_calculator {
      iou_similarity {
      }
    }
    encode_background_as_zeros: true
    anchor_generator {
      ssd_anchor_generator {
        reduce_boxes_in_lowest_layer: false
        num_layers: 4
        min_scale: 0.1
        max_scale: 0.5
        aspect_ratios: 1.0
        aspect_ratios: 2.0
        aspect_ratios: 0.5
        aspect_ratios: 3.0
        aspect_ratios: 0.3333
      }
    }
    image_resizer {
      fixed_shape_resizer {
        height: 300
        width: 300
      }
    }
    box_predictor {
      convolutional_box_predictor {
        min_depth: 0
        max_depth: 0
        num_layers_before_predictor: 0
        use_dropout: false
        dropout_keep_probability: 0.8
        kernel_size: 3
        use_depthwise: true
        box_code_size: 4
        apply_sigmoid_to_scores: false
        class_prediction_bias_init: -4.6
        conv_hyperparams {
          activation: RELU_6,
          regularizer {
            l2_regularizer {
              weight: 0.00004
            }
          }
          initializer {
            random_normal_initializer {
              stddev: 0.03
              mean: 0.0
            }
          }
          batch_norm {
            train: true,
            scale: true,
            center: true,
            decay: 0.97,
            epsilon: 0.001,
          }
        }
      }
    }
    feature_extractor {
      type: 'ssd_mobiledet_dsp'
      min_depth: 16
      depth_multiplier: 1.0
      use_depthwise: true
      num_layers: 4
      conv_hyperparams {
        activation: RELU_6,
        regularizer {
          l2_regularizer {
            weight: 0.00004
          }
        }
        initializer {
          truncated_normal_initializer {
            stddev: 0.03
            mean: 0.0
          }
        }
        batch_norm {
          train: true,
          scale: true,
          center: true,
          decay: 0.97,
          epsilon: 0.001,
        }
      }
      override_base_feature_extractor_hyperparams: false
    }
    loss {
      classification_loss {
        weighted_sigmoid_focal {
          alpha: 0.75,
          gamma: 2.0
        }
      }
      localization_loss {
        weighted_ciou {
        }
      }
      classification_weight: 1.0
      localization_weight: 5.0
    }
    normalize_loss_by_num_matches: true
    normalize_loc_loss_by_codesize: true
    post_processing {
      batch_non_max_suppression {
        score_threshold: 0.3
        iou_threshold: 0.3
        max_detections_per_class: 100
        max_total_detections: 100
        use_static_shapes: true
      }
      score_converter: SIGMOID
    }
  }
}

train_config: {
  fine_tune_checkpoint: "/tempssd/people_detection2/model_080622_track_ciou_base/model.ckpt-400000"
  fine_tune_checkpoint_type:  "detection"

  # we restore not only FeatureExtractor but also BoxPredictor. An then only train "BoxPredictor_.\/ClassPredictor.*".
  load_all_detection_checkpoint_vars: true
  # freeze_variables: ["FeatureExtractor.*", "BoxPredictor_.\/BoxEncoding.*"]

  batch_size: 20
  sync_replicas: false
  startup_delay_steps: 0
  replicas_to_aggregate: 1
  num_steps: 1
  data_augmentation_options {
    random_horizontal_flip {
    }
  }
  data_augmentation_options {
     ssd_random_crop {
          operations {
            min_object_covered: 0.5
            min_aspect_ratio: 0.5
            max_aspect_ratio: 2.0
            min_area: 0.5
            max_area: 1.0
            overlap_thresh: 0.5
            random_coef: 0.15
          }
    }
  }
  optimizer {
    momentum_optimizer: {
      learning_rate: {
        cosine_decay_learning_rate {
          learning_rate_base: 1e-2
          total_steps: 100000
          warmup_learning_rate: 1e-4
          warmup_steps: 10000
          hold_base_rate_steps: 2000
          min_learning_rate: 1e-10
        }
      }
      momentum_optimizer_value: 0.9
    }
    use_moving_average: false
  }
  max_number_of_boxes: 100
  unpad_groundtruth_tensors: false
}

train_input_reader: {
  tf_record_input_reader {
    input_path: "/tempssd/people_detection/0803_coco_people_detection_train*.record"
  }
  label_map_path: "object_detection/data/coco_people_detection.pbtxt"
}

eval_config: {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
  num_examples: 8000
}

eval_input_reader: {
  tf_record_input_reader {
    input_path: "/tempssd/people_detection/0721_people_detection_testing.record"
  }
  label_map_path: "object_detection/data/coco_people_detection.pbtxt"
  shuffle: true
  num_readers: 1
}
